@model sRecipe.WebUI.Models.CommentListViewModel
<h4>Comments</h4>
@using (Html.BeginForm())
{
    @Html.HiddenFor(m => m.RecipeId)

    <table class="table table-striped">
        <colgroup>
            <col class="col-sm-2" />
            @if (Model.Owner)
            {
                <col class="col-sm-9" />
                <col class="col-sm-1" />

            }
            else
            {
                <col class="col-sm-10" />

            }

        </colgroup>
        <thead>
            <tr>
                <th>
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Items.FirstOrDefault().Content)
                </th>
                @if (Model.Owner)
                {
                    <th>
                        Delete
                    </th>
                }
            </tr>
        </thead>
        <tbody>

            @for (int i = 0; i < Model.Items.Count() - 1; i++)
            {
                <tr>
                    <td>
                        @Html.HiddenFor(model => Model.Items[i].Id)


                        @Html.DisplayFor(model => Model.Items[i].NickName, new { htmlAttributes = new { @class = "form-control" } })
                        <br />
                        @Html.DisplayFor(model => Model.Items[i].PostTime, new { htmlAttributes = new { @class = "form-control" } })
                    </td>
                    <td>
                        @Html.DisplayFor(model => Model.Items[i].Content, new { htmlAttributes = new { @class = "form-control" } })
                    </td>

                    @if (Model.Owner)
                    {
                        <td>
                            @Html.CheckBoxFor(model => Model.Items[i].IsDeleted)
                            @Html.HiddenFor(model => Model.Items[i].UserId)
                            @Html.HiddenFor(model => Model.Items[i].PostTime)
                            @Html.HiddenFor(model => Model.Items[i].RecipeId)
                            @Html.HiddenFor(model => Model.Items[i].Viewed)
                        </td>
                    }
                </tr>

            }
            @if (User != null)
            {
                <tr>
                    <td>
                        @Html.HiddenFor(model => Model.Items[Model.Items.Count() - 1].Id)


                    </td>
                    <td>
                        @Html.TextAreaFor(model => Model.Items[Model.Items.Count() - 1].Content, new { @class = "form-control" })
                    </td>

                    @if (Model.Owner)
                    {
                        <td></td>
                    }
                </tr>
            }


        </tbody>
    </table>

    if (User != null)
    {
        <div class="form-group">
            <input type="submit"
                   class="btn btn-sm btn-info"
                   name="action:AddComment"
                   value="Post Comment" />

            @if (Model.Owner)
            {
                <input type="submit"
                       class="btn btn-primary btn-sm"
                       name="action:SaveComment"
                       value="Save Comment" />
            }
        </div>
    }
}


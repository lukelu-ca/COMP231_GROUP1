@model sRecipe.WebUI.Models.RecipesListViewModel

@{
    ViewBag.Title = "Search";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Search Recipes</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Conditions</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.SearchName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SearchName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SearchName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CurrentMealTypeID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CurrentMealTypeID,
                 new SelectList((List<SelectListItem>)ViewData["MealTypeListAll"], "Value", "Text"),
                 new { @class = "form-control" }
         )
                @Html.ValidationMessageFor(model => model.CurrentMealTypeID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-8">
                <input type="submit" value="Search" class="btn btn-primary" />
            </div>
        </div>
    </div>

}

@if (Model != null && Model.Recipes != null)
{
 <h4>Results</h4>
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Recipes.FirstOrDefault().Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Recipes.FirstOrDefault().Cooking_Time)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Recipes.FirstOrDefault().Number_of_Services)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Recipes.FirstOrDefault().Calorie)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Recipes.FirstOrDefault().MealTypeName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Recipes.FirstOrDefault().Viewed)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Recipes.FirstOrDefault().PostTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Recipes.FirstOrDefault().isPublic)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Recipes.FirstOrDefault().UserName)
            </th>
            <th></th>
        </tr>
        @foreach (var item in Model.Recipes)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Cooking_Time)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Number_of_Services)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Calorie)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MealTypeName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Viewed)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PostTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.isPublic)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UserName)
                </td>
                <td>
                    @Html.ActionLink("Details", "Details", new { id = item.Id, returnSearch = true })
                </td>
            </tr>
        }
    </table>

}
